"use strict";(self.webpackChunktcadmin_docs=self.webpackChunktcadmin_docs||[]).push([[5292],{8453:(e,s,r)=>{r.d(s,{R:()=>i,x:()=>l});var n=r(6540);const a={},t=n.createContext(a);function i(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(t.Provider,{value:s},e.children)}},9850:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"customizations/scripts/general-scripts/automatically-create-mysql-database","title":"Automatically Create a MySQL Database","description":"Rather than utilizing these legacy scripts, we advise installing the MySQL Manager module for optimal results.","source":"@site/docs/customizations/scripts/general-scripts/automatically-create-mysql-database.mdx","sourceDirName":"customizations/scripts/general-scripts","slug":"/customizations/scripts/general-scripts/automatically-create-mysql-database","permalink":"/customizations/scripts/general-scripts/automatically-create-mysql-database","draft":false,"unlisted":false,"editUrl":"https://github.com/TotalControlAdmin/tcadmin-docs/blob/master/docs/customizations/scripts/general-scripts/automatically-create-mysql-database.mdx","tags":[],"version":"current","lastUpdatedAt":1743525296000,"sidebarPosition":3,"frontMatter":{"sidebar_position":3,"sidebar_label":"Automatically Create a MySQL Database"},"sidebar":"tutorialSidebar","previous":{"title":"Allow User to Change Slots","permalink":"/customizations/scripts/general-scripts/allow-user-to-change-slots"},"next":{"title":"Backup & Restore Scripts","permalink":"/customizations/scripts/general-scripts/backup-restore-scripts"}}');var a=r(4848),t=r(8453);const i={sidebar_position:3,sidebar_label:"Automatically Create a MySQL Database"},l="Automatically Create a MySQL Database",o={},c=[{value:"Preparing the server",id:"preparing-the-server",level:2},{value:"Configure the game",id:"configure-the-game",level:2},{value:"Create variables",id:"create-variables",level:3},{value:"Create the scripts",id:"create-the-scripts",level:3},{value:"Create the custom link to phpMyadmin",id:"create-the-custom-link-to-phpmyadmin",level:3},{value:"Using the MySQL variables in templates",id:"using-the-mysql-variables-in-templates",level:3},{value:"Optional scripts",id:"optional-scripts",level:3},{value:"Icon to Change MySQL Password",id:"icon-to-change-mysql-password",level:4},{value:"Backup the database when the service is moved and restore it on the new server",id:"backup-the-database-when-the-service-is-moved-and-restore-it-on-the-new-server",level:3}];function d(e){const s={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"automatically-create-a-mysql-database",children:"Automatically Create a MySQL Database"})}),"\n",(0,a.jsx)(s.admonition,{title:"Use MySQL Manager",type:"warning",children:(0,a.jsx)(s.p,{children:"Rather than utilizing these legacy scripts, we advise installing the MySQL Manager module for optimal results."})}),"\n",(0,a.jsx)(s.h2,{id:"preparing-the-server",children:"Preparing the server"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Install the MySQL server on your server."}),"\n",(0,a.jsx)(s.li,{children:"Install phpMyAdmin if you want to provide a way to manage the database."}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"configure-the-game",children:"Configure the game"}),"\n",(0,a.jsx)(s.h3,{id:"create-variables",children:"Create variables"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Configure variables for the MySQL user and password. Go to ",(0,a.jsx)(s.code,{children:"Settings"})," > ",(0,a.jsx)(s.code,{children:"Global Variables"})," or ",(0,a.jsx)(s.code,{children:"Settings"})," > ",(0,a.jsx)(s.code,{children:"Games"})," > ",(0,a.jsx)(s.code,{children:"Select the game"})," > ",(0,a.jsx)(s.code,{children:"Variables"}),". Create 2 new variables","\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Name: ",(0,a.jsx)(s.code,{children:"MySQLUser"})]}),"\n",(0,a.jsxs)(s.li,{children:["Preserve value: ",(0,a.jsx)(s.code,{children:"Checked"})]}),"\n",(0,a.jsxs)(s.li,{children:["Name: ",(0,a.jsx)(s.code,{children:"MySQLPassword"})]}),"\n",(0,a.jsxs)(s.li,{children:["Preserve value: ",(0,a.jsx)(s.code,{children:"Checked"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"create-the-scripts",children:"Create the scripts"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Go to ",(0,a.jsx)(s.code,{children:"Settings"})," > ",(0,a.jsx)(s.code,{children:"Global Scripts"})," or ",(0,a.jsx)(s.code,{children:"Settings"})," > ",(0,a.jsx)(s.code,{children:"Games"})," > ",(0,a.jsx)(s.code,{children:"Select the game"})," > ",(0,a.jsx)(s.code,{children:"Custom Scripts"}),". Add the following scripts. They will create the database and user when the service is created and delete them when the service is deleted. Make sure you update the value of mysql_password in all of the scripts."]}),"\n",(0,a.jsx)(s.li,{children:"If you are using MySQL 8 remove the MySQL 5 command and uncomment the MySQL 8 commands."}),"\n",(0,a.jsx)(s.li,{children:"These scripts work without any additional changes if MySQL is installed on all servers (master and remotes). If you have a single MySQL server where all remotes connect you will have to change user@localhost to user@% in the user commands and configure your root user to allow connections from all IPs."}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Operating System:"})," Any",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Description:"})," Generate MySQL user and password",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Script Engine:"})," IronPython",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Event:"})," Before created",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Ignore execution errors:"})," Unchecked",(0,a.jsx)(s.br,{}),"\n","Script:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'import clr;\nimport System;\n\nclr.AddReference("TCAdmin.SDK");\nfrom TCAdmin.SDK.Misc import Random;\nfrom System import String;\n\nThisService.Variables["MySQLUser"] = String.Format("db{0}", ThisService.ServiceId);\nThisService.Variables["MySQLPassword"] = Random.RandomString(10,True,True);\nThisService.Save();\n'})}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Operating System:"})," Any",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Description:"})," Create MySQL database and user",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Script Engine:"})," IronPython",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Event:"})," After created",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Ignore execution errors:"})," Unchecked",(0,a.jsx)(s.br,{}),"\n","Script:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'import clr;\nimport System;\n\nclr.AddReference("TCAdmin.DatabaseProviders.MySql");\nclr.AddReference("TCAdmin.SDK");\nfrom TCAdmin.DatabaseProviders.MySql import MySqlManager;\nfrom System import String;\n\nmysql_server="localhost";\nmysql_root="root";\nmysql_password="";\n\nwith MySqlManager() as mysql:\n escapeduser=mysql.PrepareSqlValue(ThisService.Variables["MySQLUser"]);\n escapedpass=mysql.PrepareSqlValue(ThisService.Variables["MySQLPassword"]);\n mysql.DisableReplication=True;\n mysql.Connect(String.Format("Data Source={0};User Id={1};Password={2};Pooling=False;", mysql_server, mysql_root, mysql_password));\n\n mysql.ExecuteNonQuery(String.Format("DROP DATABASE IF EXISTS {0};", escapeduser));\n if mysql.Execute(String.Format("SELECT * FROM mysql.user WHERE user=\'{0}\' AND host=\'localhost\';", escapeduser)).Rows.Count == 1 :\n  mysql.ExecuteNonQuery(String.Format("DROP USER {0}@\'localhost\';", escapeduser));\n\n mysql.ExecuteNonQuery(String.Format("CREATE DATABASE {0};", escapeduser));\n ## MYSQL 5 SYNTAX\n mysql.ExecuteNonQuery(String.Format("GRANT ALL PRIVILEGES ON {0}.* TO \'{0}\'@\'localhost\' IDENTIFIED BY \'{1}\';", escapeduser, escapedpass));\n ## MYSQL 8 SYNTAX\n #mysql.ExecuteNonQuery(String.Format("CREATE USER \'{0}\'@\'localhost\' IDENTIFIED BY \'{1}\';", escapeduser, escapedpass));\n #mysql.ExecuteNonQuery(String.Format("GRANT ALL PRIVILEGES ON {0}.* TO \'{0}\'@\'localhost\';", escapeduser));\n\n#Add these lines  to the "Create MySQL database and user" script if you want to execute a .sql file \nwith MySqlManager() as mysql2:\n mysql2.DisableReplication=True;\n mysql2.Connect(String.Format("Data Source={0};Database={1};User Id= {1};Password={2};Pooling=False;", mysql_server, ThisService.Variables["MySQLUser"], ThisService.Variables["MySQLPassword"]));\n mysql2.ImportDatabase(ThisService.RootDirectory + "db.sql");\n'})}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Operating System:"})," Any",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Description:"})," Delete MySQL database and user",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Script Engine:"})," IronPython",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Event:"})," Before deleted",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Ignore execution errors:"})," Unchecked",(0,a.jsx)(s.br,{}),"\n","Script:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'import clr;\nimport System;\n\nclr.AddReference("TCAdmin.DatabaseProviders.MySql");\nclr.AddReference("TCAdmin.SDK");\nfrom TCAdmin.DatabaseProviders.MySql import MySqlManager;\nfrom System import String;\n\nmysql_server="localhost";\nmysql_root="root";\nmysql_password="";\n\nif not ThisService.Variables.HasValue("MySQLUser") :\n Script.Exit();\n\nif ThisService.Variables["MySQLUser"] == String.Empty:\n Script.Exit();\n\nwith MySqlManager() as mysql:\n escapeduser=mysql.PrepareSqlValue(ThisService.Variables["MySQLUser"]);\n mysql.DisableReplication=True;\n mysql.Connect(String.Format("Data Source={0};User Id={1};Password={2};Pooling=False;", mysql_server, mysql_root, mysql_password));\n\n mysql.ExecuteNonQuery(String.Format("DROP DATABASE IF EXISTS {0};", escapeduser));\n if mysql.Execute(String.Format("SELECT * FROM mysql.user WHERE user=\'{0}\' AND host=\'localhost\';", escapeduser)).Rows.Count == 1 :\n  mysql.ExecuteNonQuery(String.Format("DROP USER {0}@\'localhost\';", escapeduser));\n'})}),"\n",(0,a.jsx)(s.h3,{id:"create-the-custom-link-to-phpmyadmin",children:"Create the custom link to phpMyadmin"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["If you installed phpMyAdmin you can create a custom link. Go back to the game's main settings. Click on the Custom Links icon. Add a new link with these values:","\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Name: ",(0,a.jsx)(s.code,{children:"phpMyAdmin"})]}),"\n",(0,a.jsxs)(s.li,{children:["Description: ",(0,a.jsx)(s.code,{children:"Manage your database with phpMyAdmin"})]}),"\n",(0,a.jsxs)(s.li,{children:["Url:",(0,a.jsx)(s.code,{children:" http://$[Service.IpHostname]/phpMyAdmin/index.php?pma_username=![MySQLUser]&pma_password=![MySQLPassword] (you can also use https://phpmyadmin.tcadmin.com)"})]}),"\n",(0,a.jsxs)(s.li,{children:["Icon URL: ",(0,a.jsx)(s.code,{children:"~/App_Themes/Default/Images/ControlPanel/MenuIcons/Base/Database.png"})]}),"\n",(0,a.jsxs)(s.li,{children:["Open in a new window: ",(0,a.jsx)(s.code,{children:"Checked"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(s.admonition,{title:"update",type:"note",children:(0,a.jsxs)(s.p,{children:["Newer phpMyAdmin versions don't allow logging in to mysql with the username/password in the url. ",(0,a.jsx)(s.a,{href:"https://www.phpmyadmin.net/files/4.9.0.1/",children:"https://www.phpmyadmin.net/files/4.9.0.1/"})]})}),"\n",(0,a.jsx)(s.h3,{id:"using-the-mysql-variables-in-templates",children:"Using the MySQL variables in templates"}),"\n",(0,a.jsx)(s.p,{children:"You can use the following variables in your mail and config file templates:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.strong,{children:(0,a.jsx)(s.code,{children:"![MySQLUser]"})})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.strong,{children:(0,a.jsx)(s.code,{children:"[MySQLPassword]"})})}),"\n"]}),"\n",(0,a.jsx)(s.h3,{id:"optional-scripts",children:"Optional scripts"}),"\n",(0,a.jsx)(s.h4,{id:"icon-to-change-mysql-password",children:"Icon to Change MySQL Password"}),"\n",(0,a.jsx)(s.p,{children:"Create a variable named NewMySQLPassword. with:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:'These options checked: "Script parameter", "Save script parameter value", "Admin access", "Sub admin access", "Reseller access", "User access", "Server owner access", "Value is required"'}),"\n",(0,a.jsx)(s.li,{children:"Label=New Password"}),"\n",(0,a.jsx)(s.li,{children:"Mode=Password"}),"\n",(0,a.jsx)(s.li,{children:"Deny Characters=;&\"'/"}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Operating System:"})," Any",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Description:"})," Change MySQL Password",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Script Engine:"})," IronPython",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Event:"})," Custom Icon",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Ignore execution errors:"})," Unchecked",(0,a.jsx)(s.br,{}),"\n","Script:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'import clr;\nimport System;\nclr.AddReference("TCAdmin.DatabaseProviders.MySql");\nclr.AddReference("TCAdmin.SDK");\nfrom TCAdmin.DatabaseProviders.MySql import MySqlManager;\nfrom System import String;\n\nmysql_server="localhost";\nmysql_root="root";\nmysql_password="";\n\nwith MySqlManager() as mysql:\n escapeduser=mysql.PrepareSqlValue(ThisService.Variables["MySQLUser"]);\n escapedpass=mysql.PrepareSqlValue(ThisService.Variables["MySQLPassword"]);\n escapednewpass=mysql.PrepareSqlValue(ThisService.Variables["NewMySQLPassword"]);\n mysql.DisableReplication=True;\n mysql.Connect(String.Format("Data Source={0};User Id={1};Password={2};Pooling=False;", mysql_server, mysql_root, mysql_password));\n mysql.ExecuteNonQuery(String.Format("SET PASSWORD FOR \'{0}\'@\'localhost\' = PASSWORD(\'{1}\');", escapeduser, escapednewpass));\n mysql.ExecuteNonQuery("FLUSH PRIVILEGES;");\n ThisService.Variables["MySQLPassword"] = ThisService.Variables["NewMySQLPassword"]\n ThisService.Variables["NewMySQLPassword"] = String.Empty\n ThisService.Save()\n  \nScript.WriteToConsole("Your password has been updated successfully.")\nScript.WriteToConsole("")\n'})}),"\n",(0,a.jsx)(s.h3,{id:"backup-the-database-when-the-service-is-moved-and-restore-it-on-the-new-server",children:"Backup the database when the service is moved and restore it on the new server"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Operating System:"})," Any",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Description:"})," Backup MySQL database before moving",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Script Engine:"})," IronPython",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Event:"})," Before move",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Ignore execution errors:"})," Unchecked",(0,a.jsx)(s.br,{}),"\n","Script:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'import clr;\nimport System;\n\nclr.AddReference("TCAdmin.DatabaseProviders.MySql");\nclr.AddReference("TCAdmin.SDK");\nfrom TCAdmin.DatabaseProviders.MySql import MySqlManager;\nfrom System import String;\nfrom System.IO import FileStream, Path, FileMode, FileAccess;\n\nmysql_server="localhost";\nmysql_root="root";\nmysql_password="";\n\nif not ThisService.Variables.HasValue("MySQLUser") :\n Script.Exit();\n \nif ThisService.Variables["MySQLUser"] == "" :\n Script.Exit();\n\nbackupfile=Path.Combine(ThisService.RootDirectory, "_backup.sql");\n\nwith MySqlManager() as mysql:\n escapeduser=mysql.PrepareSqlValue(ThisService.Variables["MySQLUser"]);\n escapedpass=mysql.PrepareSqlValue(ThisService.Variables["MySQLPassword"]);\n mysql.AutoDisconnect = False;\n mysql.DisableReplication=True;\n mysql.Connect(String.Format("Data Source={0};User Id={1};Password={2};Pooling=False;", mysql_server, mysql_root, mysql_password));\n #only make a backup if database exists and has tables\n if mysql.Execute(String.Format("SHOW DATABASES LIKE \'{0}\';", escapeduser)).Rows.Count == 1 :\n  mysql.ExecuteNonQuery(String.Format("USE {0};", escapeduser));\n  if mysql.Execute("SHOW TABLES;").Rows.Count > 0 :\n   with FileStream(backupfile, FileMode.Create, FileAccess.Write) as file:\n    mysql.DumpDatabase(file);\n\n mysql.ExecuteNonQuery(String.Format("DROP DATABASE IF EXISTS {0};", escapeduser));\n if mysql.Execute(String.Format("SELECT * FROM mysql.user WHERE user=\'{0}\' AND host=\'localhost\';", escapeduser)).Rows.Count == 1 :\n  mysql.ExecuteNonQuery(String.Format("DROP USER \'{0}\'@\'localhost\';", escapeduser));\n'})}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Operating System:"})," Any",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Description:"})," Restore MySQL database after move",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Script Engine:"})," IronPython",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Event:"})," After move",(0,a.jsx)(s.br,{}),"\n",(0,a.jsx)(s.strong,{children:"Ignore execution errors:"})," Unchecked",(0,a.jsx)(s.br,{}),"\n","Script:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-python",children:'import clr;\nimport System;\n\nclr.AddReference("TCAdmin.DatabaseProviders.MySql");\nclr.AddReference("TCAdmin.SDK");\nfrom TCAdmin.DatabaseProviders.MySql import MySqlManager;\nfrom System import String;\nfrom System.IO import File, Path;\n\nmysql_server="localhost";\nmysql_root="root";\nmysql_password="";\n\nif not ThisService.Variables.HasValue("MySQLUser") :\n Script.Exit();\n\nif ThisService.Variables["MySQLUser"] == "" :\n Script.Exit();\n\nbackupfile=Path.Combine(ThisService.RootDirectory, "_backup.sql");\n\nwith MySqlManager() as mysql:\n escapeduser=mysql.PrepareSqlValue(ThisService.Variables["MySQLUser"]);\n escapedpass=mysql.PrepareSqlValue(ThisService.Variables["MySQLPassword"]);\n mysql.DisableReplication=True;\n mysql.Connect(String.Format("Data Source={0};User Id={1};Password={2};Pooling=False;", mysql_server, mysql_root, mysql_password));\n \n mysql.ExecuteNonQuery(String.Format("DROP DATABASE IF EXISTS {0};", escapeduser));\n if mysql.Execute(String.Format("SELECT * FROM mysql.user WHERE user=\'{0}\' AND host=\'localhost\';", escapeduser)).Rows.Count == 1 :\n  mysql.ExecuteNonQuery(String.Format("DROP USER \'{0}\'@\'localhost\';", escapeduser));\n\n ## MYSQL 5 SYNTAX\n mysql.ExecuteNonQuery(String.Format("CREATE DATABASE {0};", escapeduser));\n mysql.ExecuteNonQuery(String.Format("GRANT ALL PRIVILEGES ON {0}.* TO \'{0}\'@\'localhost\' IDENTIFIED BY \'{1}\';", escapeduser, escapedpass));\n ## MYSQL 8 SYNTAX\n #mysql.ExecuteNonQuery(String.Format("CREATE USER \'{0}\'@\'localhost\' IDENTIFIED BY \'{1}\';", escapeduser, escapedpass));\n #mysql.ExecuteNonQuery(String.Format("GRANT ALL PRIVILEGES ON {0}.* TO \'{0}\'@\'localhost\';", escapeduser)); \n\nif File.Exists(backupfile) :\n with MySqlManager() as mysql2:\n  mysql2.DisableReplication=True;\n  mysql2.Connect(String.Format("Data Source={0};Database={1};User Id={1};Password={2};Pooling=False;", mysql_server, ThisService.Variables["MySQLUser"], ThisService.Variables["MySQLPassword"]));\n  mysql2.ImportDatabase(backupfile);\n  File.Delete(backupfile);\n'})})]})}function m(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);