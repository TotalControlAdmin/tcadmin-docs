"use strict";(self.webpackChunktcadmin_docs=self.webpackChunktcadmin_docs||[]).push([[6158],{7513:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>m,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>p});const a=JSON.parse('{"id":"customizations/scripts/custom-protocols/intro","title":"Custom Query Protocol","description":"You can set a custom script that queries the game server. This is useful if you want to add query support for games that don\'t have a supported query protocol.","source":"@site/docs/customizations/scripts/custom-protocols/intro.mdx","sourceDirName":"customizations/scripts/custom-protocols","slug":"/customizations/scripts/custom-protocols/intro","permalink":"/customizations/scripts/custom-protocols/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/TotalControlAdmin/tcadmin-docs/blob/master/docs/customizations/scripts/custom-protocols/intro.mdx","tags":[],"version":"current","lastUpdatedAt":1751535947000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1,"sidebar_label":"Custom Query Protocol"},"sidebar":"tutorialSidebar","previous":{"title":"Custom Protocols","permalink":"/category/custom-protocols"},"next":{"title":"Rust Custom Query","permalink":"/customizations/scripts/custom-protocols/rust-custom-query"}}');var t=s(4848),n=s(8453);const l={sidebar_position:1,sidebar_label:"Custom Query Protocol"},o="Custom Query Protocol",m={},p=[{value:"Examples",id:"examples",level:2},{value:"Iron Python Script",id:"iron-python-script",level:3},{value:"C# Script",id:"c-script",level:3},{value:"Batch Script (Windows)",id:"batch-script-windows",level:3},{value:"Shell Script (Linux)",id:"shell-script-linux",level:3},{value:"XML Format",id:"xml-format",level:3}];function i(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"custom-query-protocol",children:"Custom Query Protocol"})}),"\n",(0,t.jsx)(r.p,{children:"You can set a custom script that queries the game server. This is useful if you want to add query support for games that don't have a supported query protocol."}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Create a custom script. Set the script's event to ",(0,t.jsx)(r.code,{children:"Custom query"}),". You can have more than one custom query script with different operating systems."]}),"\n",(0,t.jsx)(r.li,{children:"Set the game's query protocol to custom script."}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(r.h3,{id:"iron-python-script",children:"Iron Python Script"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:'import clr\nimport System\nfrom System import String\n \nXmlFormat="<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?><qstat><server type=\\"CUSTOM\\" address=\\"{0}:{1}\\" status=\\"{2}\\"><hostname>{0}:{1}</hostname><name>{3}</name><gametype>{4}</gametype><map>{5}</map><numplayers>{6}</numplayers><maxplayers>{7}</maxplayers><numspectators>0</numspectators><maxspectators>0</maxspectators><ping>0</ping><retries>0</retries><rules>{8}</rules><players>{9}</players></server></qstat>"\nStatus="UP"\nName="Cool Game Server"\nGameType="game mode"\nMap="map name"\nNumPlayers=2\nMaxPlayers=8\nRules="<rule name=\\"Rule 1\\">rule value</rule><rule name=\\"Rule 2\\">rule value</rule>"\nPlayers="<player><name>Player 1</name><ping>0</ping><score>100</score></player><player><name>Player 2</name><ping>0</ping><score>200</score></player>"\n  \nReturnValue=String.Format(XmlFormat, ThisService.IpAddress, ThisService.QueryPort, Status, Name, GameType, Map, NumPlayers, MaxPlayers, Rules, Players)\n'})}),"\n",(0,t.jsx)(r.h3,{id:"c-script",children:"C# Script"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-c#",children:'//If your script uses other assemblies you can reference them here:\n//refAssemblies: System.dll, TCAdmin.SDK.dll,TCAdmin.GameHosting.SDK.dll\n \nusing System;\n \npublic class CSharpScript : CSharpScriptBase\n{\n   \n  public void Main() {\n    var XmlFormat="<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?><qstat><server type=\\"CUSTOM\\" address=\\"{0}:{1}\\" status=\\"{2}\\"><hostname>{0}:{1}</hostname><name>{3}</name><gametype>{4}</gametype><map>{5}</map><numplayers>{6}</numplayers><maxplayers>{7}</maxplayers><numspectators>0</numspectators><maxspectators>0</maxspectators><ping>0</ping><retries>0</retries><rules>{8}</rules><players>{9}</players></server></qstat>";\n    var Status="UP";\n    var Name="Cool Game Server";\n    var GameType="game mode";\n    var Map="map name";\n    var NumPlayers=2;\n    var MaxPlayers=8;\n    var Rules="<rule name=\\"Rule 1\\">rule value</rule><rule name=\\"Rule 2\\">rule value</rule>";\n    var Players="<player><name>Player 1</name><ping>0</ping><score>100</score></player><player><name>Player 2</name><ping>0</ping><score>200</score></player>";\n  \n    var ReturnValue=String.Format(XmlFormat, ThisService.IpAddress, ThisService.QueryPort, Status, Name, GameType, Map, NumPlayers, MaxPlayers, Rules, Players);\n    Script.AddVariable("ReturnValue", ReturnValue);\n  }\n}\n'})}),"\n",(0,t.jsx)(r.h3,{id:"batch-script-windows",children:"Batch Script (Windows)"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'@echo off\nset Status=UP\nset Name=Cool Game Server\nset GameType=game mode\nset Map=map name\nset NumPlayers=2\nset MaxPlayers=8\nset Rules=^^^<rule name="Rule 1"^^^>rule value^^^</rule^^^>^^^<rule name="Rule 2"^^^>rule value^^^</rule^^^>\nset Players=^^^<player^^^>^^^<name^^^>Player 1^^^</name^^^>^^^<ping^^^>0^^^</ping^^^>^^^<score^^^>100^^^</score^^^>^^^</player^^^>^^^<player^^^>^^^<name^^^>Player 2^^^</name^^^>^^^<ping^^^>0^^^</ping^^^>^^^<score^^^>200^^^</score^^^>^^^</player^^^>\n\necho ^<?xml version="1.0" encoding="UTF-8"?^>^<qstat^>^<server type="CUSTOM" address="%ThisService_IpAddress%:%ThisService_QueryPort%" status="%Status%"^>^<hostname^>%ThisService_IpAddress%:%ThisService_QueryPort%^</hostname^>^<name^>%Name%^</name^>^<gametype^>%GameType%^</gametype^>^<map^>%Map%^</map^>^<numplayers^>%NumPlayers%^</numplayers^>^<maxplayers^>%MaxPlayers%^</maxplayers^>^<numspectators^>0^</numspectators^>^<maxspectators^>0^</maxspectators^>^<ping^>0^</ping^>^<retries^>0^</retries^>^<rules^>%Rules%^</rules^>^<players^>%Players%^</players^>^</server^>^</qstat^>\n'})}),"\n",(0,t.jsx)(r.h3,{id:"shell-script-linux",children:"Shell Script (Linux)"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'Status="UP"\nName="Cool Game Server"\nGameType="game mode"\nMap="map name"\nNumPlayers=2\nMaxPlayers=8\nRules=\'<rule name="Rule 1">rule value</rule><rule name="Rule 2">rule value</rule>\'\nPlayers=\'<player><name>Player 1</name><ping>0</ping><score>100</score></player><player><name>Player 2</name><ping>0</ping><score>200</score></player>\'\n\necho \\<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?\\>\\<qstat\\>\\<server type=\\"CUSTOM\\" address=\\"${ThisService_IpAddress}:${ThisService_QueryPort}\\" status=\\"${Status}\\"\\>\\<hostname\\>${ThisService_IpAddress}:${ThisService_QueryPort}\\</hostname\\>\\<name\\>${Name}\\</name\\>\\<gametype\\>${GameType}\\</gametype\\>\\<map\\>${Map}\\</map\\>\\<numplayers\\>${NumPlayers}\\</numplayers\\>\\<maxplayers\\>${MaxPlayers}\\</maxplayers\\>\\<numspectators\\>0\\</numspectators\\>\\<maxspectators\\>0\\</maxspectators\\>\\<ping\\>0\\</ping\\>\\<retries\\>0\\</retries\\>\\<rules\\>${Rules}\\</rules\\>\\<players\\>${Players}\\</players\\>\\</server\\>\\</qstat\\>\n'})}),"\n",(0,t.jsx)(r.h3,{id:"xml-format",children:"XML Format"}),"\n",(0,t.jsx)(r.p,{children:"This an example of the XML format supported by TCAdmin."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n<qstat>\n <server type="CUSTOM" address=":" status="UP">\n  <hostname>:</hostname>\n  <name>Cool Game Server</name>\n  <gametype>game mode</gametype>\n  <map>map name</map>\n  <numplayers>2</numplayers>\n  <maxplayers>8</maxplayers>\n  <numspectators>0</numspectators>\n  <maxspectators>0</maxspectators>\n  <ping>0</ping>\n  <retries>0</retries>\n  <rules>\n   <rule name="Rule 1">rule value</rule>\n   <rule name="Rule 2">rule value</rule>\n  </rules>\n  <players>\n   <player>\n    <name>Player 1</name>\n    <ping>0</ping>\n    <score>100</score>\n   </player>\n   <player>\n    <name>Player 2</name>\n    <ping>0</ping>\n    <score>200</score>\n   </player>\n  </players>\n </server>\n</qstat>\n'})})]})}function u(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>l,x:()=>o});var a=s(6540);const t={},n=a.createContext(t);function l(e){const r=a.useContext(n);return a.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),a.createElement(n.Provider,{value:r},e.children)}}}]);