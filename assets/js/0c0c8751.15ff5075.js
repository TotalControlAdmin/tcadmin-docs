"use strict";(self.webpackChunktcadmin_docs=self.webpackChunktcadmin_docs||[]).push([[9120],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,a=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=l(r),y=s,d=u["".concat(c,".").concat(y)]||u[y]||m[y]||a;return r?n.createElement(d,i(i({ref:t},p),{},{components:r})):n.createElement(d,i({ref:t},p))}));function d(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=r.length,i=new Array(a);i[0]=y;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:s,i[1]=o;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},4423:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var n=r(7462),s=(r(7294),r(3905));const a={sidebar_position:12,sidebar_label:"Restart service when last player disconnects"},i="Restart service when last player disconnects",o={unversionedId:"customizations/scripts/general-scripts/restart-service-when-last-player-disconnects",id:"customizations/scripts/general-scripts/restart-service-when-last-player-disconnects",title:"Restart service when last player disconnects",description:"Create the scripts",source:"@site/docs/customizations/scripts/general-scripts/restart-service-when-last-player-disconnects.mdx",sourceDirName:"customizations/scripts/general-scripts",slug:"/customizations/scripts/general-scripts/restart-service-when-last-player-disconnects",permalink:"/customizations/scripts/general-scripts/restart-service-when-last-player-disconnects",draft:!1,editUrl:"https://github.com/TotalControlAdmin/tcadmin-docs/blob/master/docs/customizations/scripts/general-scripts/restart-service-when-last-player-disconnects.mdx",tags:[],version:"current",lastUpdatedAt:1696666871,formattedLastUpdatedAt:"Oct 7, 2023",sidebarPosition:12,frontMatter:{sidebar_position:12,sidebar_label:"Restart service when last player disconnects"},sidebar:"tutorialSidebar",previous:{title:"Restart service if used more than x cpu or memory for the last 3 queries",permalink:"/customizations/scripts/general-scripts/restart-service-if-used-more-than-x-cpu-mem"},next:{title:"Restart service when last player disconnects",permalink:"/customizations/scripts/general-scripts/stop-service-after-empty-for-2-days"}},c={},l=[{value:"Create the scripts",id:"create-the-scripts",level:2}],p={toc:l},u="wrapper";function m(e){let{components:t,...r}=e;return(0,s.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"restart-service-when-last-player-disconnects"},"Restart service when last player disconnects"),(0,s.kt)("h2",{id:"create-the-scripts"},"Create the scripts"),(0,s.kt)("p",null,"Go to the game's settings. Click on the Custom Scripts icon. Add the following script. This can also be configured as a global script."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Operating System:")," Any",(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("strong",{parentName:"p"},"Description:")," Restart game server after the last player disconnects",(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("strong",{parentName:"p"},"Script Engine:")," IronPython",(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("strong",{parentName:"p"},"Event:")," Query Monitoring",(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("strong",{parentName:"p"},"Ignore execution errors:")," Checked",(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("strong",{parentName:"p"},"Script:")," "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'import clr\nimport System\nfrom System import String\n\nif QueryResults.Running == False :\n  Script.Exit()\n\nNumPlayers = QueryResults.NumPlayers\nLastNumPlayers = 0\n\nif ThisService.Variables.HasValue("LastNumPlayers") :\n  LastNumPlayers = ThisService.Variables["LastNumPlayers"]\n\nScript.WriteToConsole(String.Format("{0} - Previous Players: {1} Current Players: {2}", ThisService.ConnectionInfo, LastNumPlayers, NumPlayers))\n\nif LastNumPlayers > 0 and NumPlayers == 0 :\n  Script.WriteToConsole(String.Format("{0} - Last player disconnected. Restarting...", ThisService.ConnectionInfo))\n  ThisService.Restart()\n\nif NumPlayers != LastNumPlayers or ThisService.Variables.HasValue("LastNumPlayers") == False:\n  ThisService.Variables["LastNumPlayers"] = NumPlayers\n  ThisService.Save()\n')))}m.isMDXComponent=!0}}]);