"use strict";(self.webpackChunktcadmin_docs=self.webpackChunktcadmin_docs||[]).push([[5127],{3424:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var i=t(4848),r=t(8453),s=t(1470),a=t(9365);const o={sidebar_position:2,sidebar_label:"Setting up Nginx with TCAdmin"},c="Setting up Nginx with TCAdmin",l={id:"customizations/web-server-configurations/setting-up-nginx",title:"Setting up Nginx with TCAdmin",description:"The steps provided for configuring nginx in this guide are tailored for Ubuntu 22.04, which is the suggested and preferred operating system. Should you be utilizing a different operating system, consider this guide as a point of reference.",source:"@site/docs/customizations/web-server-configurations/setting-up-nginx.mdx",sourceDirName:"customizations/web-server-configurations",slug:"/customizations/web-server-configurations/setting-up-nginx",permalink:"/customizations/web-server-configurations/setting-up-nginx",draft:!1,unlisted:!1,editUrl:"https://github.com/TotalControlAdmin/tcadmin-docs/blob/master/docs/customizations/web-server-configurations/setting-up-nginx.mdx",tags:[],version:"current",lastUpdatedAt:1709834562,formattedLastUpdatedAt:"Mar 7, 2024",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Setting up Nginx with TCAdmin"},sidebar:"tutorialSidebar",previous:{title:"Setting up IIS with TCAdmin",permalink:"/customizations/web-server-configurations/setting-up-iis"},next:{title:"Setting up ASPNET IIS Classic",permalink:"/customizations/web-server-configurations/aspnet-iis-classic"}},d={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installing Nginx",id:"installing-nginx",level:2},{value:"Checking your Web Server",id:"checking-your-web-server",level:2},{value:"Configure TCAdmin to Execute the Fastcgi Server",id:"configure-tcadmin-to-execute-the-fastcgi-server",level:2},{value:"Use HyperFastCgi (optional)",id:"use-hyperfastcgi-optional",level:2},{value:"Update tcadmin-config",id:"update-tcadmin-config",level:2},{value:"Configure Nginx",id:"configure-nginx",level:2},{value:"Configure the control panel website",id:"configure-the-control-panel-website",level:2},{value:"Adding the custom TCAdmin server blocks",id:"adding-the-custom-tcadmin-server-blocks",level:3},{value:"After creating the file restart the nginx server:",id:"after-creating-the-file-restart-the-nginx-server",level:3},{value:"Configure the website to allow secure connections",id:"configure-the-website-to-allow-secure-connections",level:2},{value:"Get a certificate from Let&#39;s Encrypt",id:"get-a-certificate-from-lets-encrypt",level:3},{value:"Installing Certbot",id:"installing-certbot",level:3},{value:"Obtaining an SSL Certificate",id:"obtaining-an-ssl-certificate",level:3},{value:"Verifying Certbot Auto-Renewal",id:"verifying-certbot-auto-renewal",level:3},{value:"Create a self signed certificate (optional)",id:"create-a-self-signed-certificate-optional",level:3},{value:"Change the default ports (optional)",id:"change-the-default-ports-optional",level:2},{value:"Enable logging (optional)",id:"enable-logging-optional",level:2},{value:"Common Errors",id:"common-errors",level:2},{value:"Object reference error when logging in",id:"object-reference-error-when-logging-in",level:3},{value:"Port already in use",id:"port-already-in-use",level:3},{value:"Website doesn&#39;t load",id:"website-doesnt-load",level:3},{value:"Website errors every few minutes",id:"website-errors-every-few-minutes",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"setting-up-nginx-with-tcadmin",children:"Setting up Nginx with TCAdmin"}),"\n",(0,i.jsx)(n.admonition,{title:"important",type:"warning",children:(0,i.jsx)(n.p,{children:"The steps provided for configuring nginx in this guide are tailored for Ubuntu 22.04, which is the suggested and preferred operating system. Should you be utilizing a different operating system, consider this guide as a point of reference."})}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.p,{children:["Prior to starting with this tutorial, ensure that you possess a standard user account with sudo privileges set up on your server, without using root access. ",(0,i.jsx)(n.a,{href:"https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-22-04",children:"Initial server setup guide for Ubuntu 22.04."})]}),"\n",(0,i.jsxs)(n.p,{children:["Additionally, it's recommended to have already registered a domain name before reaching the final stages of this guide. ",(0,i.jsx)(n.a,{href:"https://developers.cloudflare.com/registrar/get-started/register-domain/",children:"Register a new domain"})," If you already have a domain with DNS configured you can skip this step."]}),"\n",(0,i.jsx)(n.p,{children:"Once you have a valid account, initiate the process by logging in as your non-root user."}),"\n",(0,i.jsx)(n.h2,{id:"installing-nginx",children:"Installing Nginx"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt update\nsudo apt install nginx\n"})}),"\n",(0,i.jsx)(n.h2,{id:"checking-your-web-server",children:"Checking your Web Server"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl status nginx\n"})}),"\n",(0,i.jsx)(n.p,{children:"Yoiu should see:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\u25cf nginx.service - A high performance web server and a reverse proxy server\n   Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)\n   Active: active (running) since Fri 2022-03-01 16:08:19 UTC; 3 days ago\n     Docs: man:nginx(8)\n Main PID: 2369 (nginx)\n    Tasks: 2 (limit: 1153)\n   Memory: 3.5M\n   CGroup: /system.slice/nginx.service\n           \u251c\u25002369 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;\n           \u2514\u25002380 nginx: worker processb\n"})}),"\n",(0,i.jsxs)(n.p,{children:["More commands and info ",(0,i.jsx)(n.a,{href:"https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-22-04",children:(0,i.jsx)(n.strong,{children:"here"})})]}),"\n",(0,i.jsx)(n.h2,{id:"configure-tcadmin-to-execute-the-fastcgi-server",children:"Configure TCAdmin to Execute the Fastcgi Server"}),"\n",(0,i.jsx)(n.p,{children:"If you are running Debian or Ubunto with Mono 4 install the mono-fastcgi-server4 package:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt-get install mono-fastcgi-server4\n"})}),"\n",(0,i.jsx)(n.h2,{id:"use-hyperfastcgi-optional",children:"Use HyperFastCgi (optional)"}),"\n",(0,i.jsxs)(n.p,{children:["You can install HyperFastCgi which should give better performance and memory usage. TCAdmin will automatically detect HyperFastCgi and use it instead of the mono fastcgi. ",(0,i.jsx)(n.a,{href:"https://github.com/xplicit/HyperFastCgi",children:"https://github.com/xplicit/HyperFastCgi"})]}),"\n",(0,i.jsx)(n.h2,{id:"update-tcadmin-config",children:"Update tcadmin-config"}),"\n",(0,i.jsxs)(n.p,{children:["Edit the file ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"tcadmin-config"})}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo nano /home/tcadmin/Monitor/tcadmin-config\n"})}),"\n",(0,i.jsx)(n.p,{children:"Find and and change:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'ENABLE_FASTCGI_SERVER="False"\n'})}),"\n",(0,i.jsx)(n.p,{children:"to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'ENABLE_FASTCGI_SERVER="True"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Then restart the monitor service:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"/home/tcadmin/Monitor/monitor-service restart\n"})}),"\n",(0,i.jsx)(n.h2,{id:"configure-nginx",children:"Configure Nginx"}),"\n",(0,i.jsxs)(n.p,{children:["Edit the file ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"nginx.conf"})})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo nano /etc/nginx/nginx.conf\n"})}),"\n",(0,i.jsx)(n.p,{children:"Find and change:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"user nginx;\n"})}),"\n",(0,i.jsx)(n.p,{children:"to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"user tcadmin;\n"})}),"\n",(0,i.jsx)(n.p,{children:"Then execute this command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo systemctl restart nginx\n"})}),"\n",(0,i.jsx)(n.h2,{id:"configure-the-control-panel-website",children:"Configure the control panel website"}),"\n",(0,i.jsx)(n.p,{children:"run the following command:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"sudo nano /etc/nginx/sites-available/default\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"If there is existing server blocks in the default file you can fully remove it ensuring the file is empty."})}),"\n",(0,i.jsx)(n.h3,{id:"adding-the-custom-tcadmin-server-blocks",children:"Adding the custom TCAdmin server blocks"}),"\n",(0,i.jsx)(n.admonition,{title:"Important",type:"info",children:(0,i.jsxs)(n.p,{children:["uncomment the ",(0,i.jsx)(n.code,{children:"server_name."})," ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"(remove the #)"})})," for the below conf file and enter your own domain name. (",(0,i.jsx)(n.strong,{children:"Line: 15"}),")"]})}),"\n",(0,i.jsxs)(n.p,{children:["add/replace the below server blocks to the ",(0,i.jsx)(n.code,{children:"default folder"})]}),"\n",(0,i.jsxs)(s.A,{children:[(0,i.jsx)(a.A,{value:"MVC",label:"MVC (Recommended)",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",metastring:"showLineNumbers",children:"upstream tcadmin-fcgi {\n        ip_hash;\n        server unix:/home/tcadmin/Temp/fastcgi-socket-1;\n        keepalive 32;\n}\n\nupstream tcadmin-fcgi-mvc {\n        ip_hash;\n        server unix:/home/tcadmin/Temp/fastcgi-socket-mvc-1;\n        keepalive 32;\n}\n\nserver {\n        #the following line is required if you want to configure with Let's Encrypt\n        #server_name tcadmin.yourdomain.com;\n        fastcgi_temp_path /home/tcadmin/Temp 1 2;\n        client_body_temp_path /home/tcadmin/Temp 1 2;\n        listen   8880;\n        #access_log   /home/tcadmin/Logs/nginx.log;\n        root /home/tcadmin/ControlPanel.MVC;\n        index index.html index.htm default.aspx Default.aspx;\n\n        #Support for Let's encrypt tools\n        location /.well-known {\n               try_files $uri $uri/ =404;\n        }\n\n        #Everything else served by fastcgi server\n        location / {\n               root /home/tcadmin/ControlPanel.MVC;\n               fastcgi_ignore_client_abort on;\n               fastcgi_pass tcadmin-fcgi-mvc;\n               include fastcgi_params;\n               fastcgi_split_path_info ^(.+\\.as[pmh]x)(.*)$;\n               fastcgi_param PATH_INFO $fastcgi_path_info;\n               fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;\n               fastcgi_keep_conn on;\n               fastcgi_buffering off;\n               fastcgi_read_timeout 600s;\n               gzip            on;\n               client_max_body_size 100m;\n       }\n\n        #Everything else served by fastcgi server\n        location /Aspx {\n               root /home/tcadmin/ControlPanel;\n               fastcgi_ignore_client_abort on;\n               fastcgi_index Default.aspx;\n               fastcgi_pass tcadmin-fcgi;\n               include fastcgi_params;\n               fastcgi_split_path_info ^(.+\\.as[pmh]x)(.*)$;\n               fastcgi_param PATH_INFO $fastcgi_path_info;\n               fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;\n               fastcgi_keep_conn on;\n               fastcgi_buffering off;\n               fastcgi_read_timeout 600s;\n               gzip            off;\n               client_max_body_size 100m;\n       }\n}\n"})})}),(0,i.jsxs)(a.A,{value:"asp",label:"ASP.NET",children:[(0,i.jsx)(n.admonition,{title:"important",type:"warning",children:(0,i.jsx)(n.p,{children:"This file is for TCAdmin 2.0.127 and earlier or if you have MVC templates disabled."})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",metastring:"showLineNumbers",children:"upstream tcadmin-fcgi {\n        ip_hash;\n        server unix:/home/tcadmin/Temp/fastcgi-socket-1;\n        keepalive 32;\n}\n\nserver {\n        #the following line is required if you want to configure with Let's Encrypt\n        #server_name tcadmin.yourdomain.com;\n        fastcgi_temp_path /home/tcadmin/Temp 1 2;\n        client_body_temp_path /home/tcadmin/Temp 1 2;\n        listen   8880;\n        #access_log   /home/tcadmin/Logs/nginx.log;\n        root /home/tcadmin/ControlPanel;\n        index index.html index.htm default.aspx Default.aspx;\n\n        #Support for Let's encrypt tools\n        location /.well-known {\n               try_files $uri $uri/ =404;\n        }\n        \n        #Static files are served by nginx\n        location ~ \\.(css|js|txt|xml|jpg|png|gif|ico)$ {\n               gzip            on;\n               gzip_min_length 1000;\n               gzip_proxied    expired no-cache no-store private auth;\n               gzip_types      text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;\n        }\n\n        #Everything else served by fastcgi server\n        location / {\n               fastcgi_ignore_client_abort on;\n               fastcgi_index Default.aspx;\n               fastcgi_pass tcadmin-fcgi;\n               include fastcgi_params;\n               fastcgi_split_path_info ^(.+\\.as[pmh]x)(.*)$;\n               fastcgi_param PATH_INFO $fastcgi_path_info;\n               fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;\n               fastcgi_keep_conn on;\n               fastcgi_buffering off;\n               fastcgi_read_timeout 600s;\n               gzip            off;\n               client_max_body_size 100m;\n       }\n}\n"})})]})]}),"\n",(0,i.jsx)(n.h3,{id:"after-creating-the-file-restart-the-nginx-server",children:"After creating the file restart the nginx server:"}),"\n",(0,i.jsx)(n.p,{children:"first run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo nginx -t\n"})}),"\n",(0,i.jsx)(n.p,{children:"output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n"})}),"\n",(0,i.jsxs)(n.p,{children:["if you do not get the above successful message you will need to double check your ",(0,i.jsx)(n.code,{children:"default"})," file is correct"]}),"\n",(0,i.jsx)(n.p,{children:"if all is correct you can run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo systemctl restart nginx\n"})}),"\n",(0,i.jsx)(n.h2,{id:"configure-the-website-to-allow-secure-connections",children:"Configure the website to allow secure connections"}),"\n",(0,i.jsx)(n.h3,{id:"get-a-certificate-from-lets-encrypt",children:"Get a certificate from Let's Encrypt"}),"\n",(0,i.jsx)(n.h3,{id:"installing-certbot",children:"Installing Certbot"}),"\n",(0,i.jsx)(n.p,{children:"Certbot suggests utilizing their snap package for installation. Snap packages are compatible with most Linux distributions, but prior to using them, you must have snapd installed to handle these packages. Notably, Ubuntu 22.04 inherently supports snaps, ensuring that you can proceed by verifying the up-to-dateness of your snapd core package."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo snap install core; sudo snap refresh core\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsxs)(n.p,{children:["If you get the error: ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"snap: command not found"})})," run the commands below:"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo apt-get update\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo apt-get install snapd\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo snap install core; sudo snap refresh core\n"})})]}),"\n",(0,i.jsxs)(n.admonition,{title:"skip if you have never had the old certbot files installed",type:"note",children:[(0,i.jsx)(n.p,{children:"In the event that your server previously hosted an older version of Certbot, it's advisable to remove it before proceeding:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo apt remove certbot\n"})})]}),"\n",(0,i.jsx)(n.p,{children:"Subsequently, you can proceed with the installation of the Certbot package:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo snap install --classic certbot\n"})}),"\n",(0,i.jsx)(n.p,{children:'To conclude, you should create a symbolic link from the Certbot command in the snap installation directory to your path. This will enable you to execute Certbot by simply entering the command "certbot." While not essential for all packages, this step is often unnecessary with snaps due to their default non-intrusive nature, preventing unintended conflicts with other system packages:'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo ln -s /snap/bin/certbot /usr/bin/certbot\n"})}),"\n",(0,i.jsx)(n.p,{children:"With Certbot now successfully installed, we can initiate it to obtain our desired certificate."}),"\n",(0,i.jsx)(n.h3,{id:"obtaining-an-ssl-certificate",children:"Obtaining an SSL Certificate"}),"\n",(0,i.jsx)(n.p,{children:"run the below commands and follow the prompts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"enter an email address and agree to the terms of service"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo certbot --nginx -d tcadmin.yourdomain.com\n"})}),"\n",(0,i.jsx)(n.p,{children:"output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Output\nIMPORTANT NOTES:\nSuccessfully received certificate.\nCertificate is saved at: /etc/letsencrypt/live/tcadmin.yourdomain.com/fullchain.pem\nKey is saved at: /etc/letsencrypt/live/tcadmin.yourdomain.com/privkey.pem\nThis certificate expires on 2022-06-01.\nThese files will be updated when the certificate renews.\nCertbot has set up a scheduled task to automatically renew this certificate in the background.\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nIf you like Certbot, please consider supporting our work by:\n* Donating to ISRG / Let's Encrypt: https://letsencrypt.org/donate\n* Donating to EFF: https://eff.org/donate-le\n"})}),"\n",(0,i.jsx)(n.h3,{id:"verifying-certbot-auto-renewal",children:"Verifying Certbot Auto-Renewal"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Let\u2019s Encrypt\u2019s certificates are only valid for ninety days. This is to encourage users to automate their certificate renewal process."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"You can query the status of the timer with systemctl:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo systemctl status snap.certbot.renew.service\n"})}),"\n",(0,i.jsx)(n.p,{children:"Output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\u25cb snap.certbot.renew.service - Service for snap application certbot.renew\n     Loaded: loaded (/etc/systemd/system/snap.certbot.renew.service; static)\n     Active: inactive (dead)\nTriggeredBy: \u25cf snap.certbot.renew.timer\n"})}),"\n",(0,i.jsx)(n.h3,{id:"create-a-self-signed-certificate-optional",children:"Create a self signed certificate (optional)"}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"If you have ran the setup for Lets Encrypt you do not need this step and it can be skipped"})}),"\n",(0,i.jsx)(n.p,{children:"The default certificate and private key used by TCAdmin are not compatible with nginx. You must create new ones. Execute the following commands. When it asks for a passphrase enter a word that you can remember. If you already have a certificate place the files in the Monitor folder, make tcadmin the owner and update the paths in the ssl_certificate and ssl_certificate_key parameters."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"cd /home/tcadmin/Monitor\nopenssl genrsa -des3 -out nginx.key 2048\n"})}),"\n",(0,i.jsx)(n.p,{children:"Execute this command. Enter the passphrase that you used in the first step. You can leave all other values blank."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"openssl req -new -key nginx.key -out nginx.csr\n"})}),"\n",(0,i.jsx)(n.p,{children:"Execute this command. Enter the passphrase that you used in the first step."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"mv nginx.key nginx.key.org\nopenssl rsa -in nginx.key.org -out nginx.key\n"})}),"\n",(0,i.jsx)(n.p,{children:"Execute this command to create the certificate file."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"openssl x509 -req -days 7300 -in nginx.csr -signkey nginx.key -out nginx.crt\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Add the following lines to ",(0,i.jsx)(n.code,{children:"/etc/nginx/sites-available/default"})," under listen 8880;."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"listen   8881 ssl;\nssl_certificate /home/tcadmin/Monitor/nginx.crt;\nssl_certificate_key /home/tcadmin/Monitor/nginx.key;\n"})}),"\n",(0,i.jsx)(n.p,{children:"After updating the file restart the nginx server:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo systemctl restart nginx\n"})}),"\n",(0,i.jsx)(n.h2,{id:"change-the-default-ports-optional",children:"Change the default ports (optional)"}),"\n",(0,i.jsxs)(n.p,{children:["If you change the default ports in /etc/nginx/sites-available/default make sure you update the values of ",(0,i.jsx)(n.code,{children:"WEB_PORT"})," and ",(0,i.jsx)(n.code,{children:"SECURE_WEB_PORT"})," in ",(0,i.jsx)(n.code,{children:"/home/tcadmin/Monitor/tcadmin-config"})," and restart the monitor service:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"/home/tcadmin/Monitor/monitor-service restart\n"})}),"\n",(0,i.jsx)(n.h2,{id:"enable-logging-optional",children:"Enable logging (optional)"}),"\n",(0,i.jsxs)(n.p,{children:["Logging is commented out in the above configuration. You can enable it by changing ",(0,i.jsx)(n.code,{children:"#access_log"})," to access_log and reloading the nginx service. That will create a single log file that can get huge after a few days. You can configure log rotation with these instructions: ",(0,i.jsx)(n.a,{href:"https://www.digitalocean.com/community/tutorials/how-to-configure-logging-and-log-rotation-in-nginx-on-an-ubuntu-vps",children:"https://www.digitalocean.com/community/tutorials/how-to-configure-logging-and-log-rotation-in-nginx-on-an-ubuntu-vps"})]}),"\n",(0,i.jsx)(n.h2,{id:"common-errors",children:"Common Errors"}),"\n",(0,i.jsx)(n.h3,{id:"object-reference-error-when-logging-in",children:"Object reference error when logging in"}),"\n",(0,i.jsx)(n.p,{children:"This should only happen the first time you log in after changing the web server."}),"\n",(0,i.jsx)(n.h3,{id:"port-already-in-use",children:"Port already in use"}),"\n",(0,i.jsx)(n.p,{children:"If Nginx says the port is already in use make sure you configured TCAdmin to start the fastcgi server instead of the built in web server and restarted the monitor. Also check if there is a process using port 8880 and kill it:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"netstat -tlnp|grep 8880\n"})}),"\n",(0,i.jsx)(n.h3,{id:"website-doesnt-load",children:"Website doesn't load"}),"\n",(0,i.jsx)(n.p,{children:"Try starting nginx:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"sudo systemctl restart nginx\n"})}),"\n",(0,i.jsx)(n.h3,{id:"website-errors-every-few-minutes",children:"Website errors every few minutes"}),"\n",(0,i.jsxs)(n.p,{children:["Edit ",(0,i.jsx)(n.code,{children:"/home/tcadmin/Monitor/TCAdminMonitor.exe.config"}),". Change the value of ",(0,i.jsx)(n.code,{children:"TCAdmin.CheckWebHealth"})," to ",(0,i.jsx)(n.code,{children:"False"})," and restart the monitor."]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var i=t(4164);const r={tabItem:"tabItem_Ymn6"};var s=t(4848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,a),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>w});var i=t(6540),r=t(4164),s=t(3104),a=t(6347),o=t(205),c=t(7485),l=t(1682),d=t(9466);function u(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:r}}=e;return{value:n,label:t,attributes:i,default:r}}))}(t);return function(e){const n=(0,l.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const r=(0,a.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c.aZ)(s),(0,i.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=h(e),[a,c]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:s}))),[l,u]=g({queryString:t,groupId:r}),[m,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,d.Dv)(t);return[r,(0,i.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:r}),x=(()=>{const e=l??m;return p({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{x&&c(x)}),[x]);return{selectedValue:a,selectValue:(0,i.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),f(e)}),[u,f,s]),tabValues:s}}var f=t(2303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(4848);function v(e){let{className:n,block:t,selectedValue:i,selectValue:a,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,s.a_)(),d=e=>{const n=e.currentTarget,t=c.indexOf(n),r=o[t].value;r!==i&&(l(n),a(r))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>c.push(e),onKeyDown:u,onClick:d,...s,className:(0,r.A)("tabs__item",x.tabItem,s?.className,{"tabs__item--active":i===n}),children:t??n},n)}))})}function j(e){let{lazy:n,children:t,selectedValue:r}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===r));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function y(e){const n=m(e);return(0,b.jsxs)("div",{className:(0,r.A)("tabs-container",x.tabList),children:[(0,b.jsx)(v,{...e,...n}),(0,b.jsx)(j,{...e,...n})]})}function w(e){const n=(0,f.A)();return(0,b.jsx)(y,{...e,children:u(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);