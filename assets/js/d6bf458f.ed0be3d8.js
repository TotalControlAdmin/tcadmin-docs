"use strict";(self.webpackChunktcadmin_docs=self.webpackChunktcadmin_docs||[]).push([[6700],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>d});var a=t(7294);function s(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){s(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,s=function(e,r){if(null==e)return{};var t,a,s={},n=Object.keys(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var p=a.createContext({}),m=function(e){var r=a.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},u=function(e){var r=m(e.components);return a.createElement(p.Provider,{value:r},e.children)},i="mdxType",c={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},y=a.forwardRef((function(e,r){var t=e.components,s=e.mdxType,n=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),i=m(t),y=s,d=i["".concat(p,".").concat(y)]||i[y]||c[y]||n;return t?a.createElement(d,o(o({ref:r},u),{},{components:t})):a.createElement(d,o({ref:r},u))}));function d(e,r){var t=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var n=t.length,o=new Array(n);o[0]=y;var l={};for(var p in r)hasOwnProperty.call(r,p)&&(l[p]=r[p]);l.originalType=e,l[i]="string"==typeof e?e:s,o[1]=l;for(var m=2;m<n;m++)o[m]=t[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},6398:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>n,metadata:()=>l,toc:()=>m});var a=t(7462),s=(t(7294),t(3905));const n={sidebar_position:1,sidebar_label:"Custom Query Protocol"},o="Custom Query Protocol",l={unversionedId:"customizations/scripts/custom-protocols/intro",id:"customizations/scripts/custom-protocols/intro",title:"Custom Query Protocol",description:"You can set a custom script that queries the game server. This is useful if you want to add query support for games that don't have a supported query protocol.",source:"@site/docs/customizations/scripts/custom-protocols/intro.mdx",sourceDirName:"customizations/scripts/custom-protocols",slug:"/customizations/scripts/custom-protocols/intro",permalink:"/customizations/scripts/custom-protocols/intro",draft:!1,editUrl:"https://github.com/TotalControlAdmin/tcadmin-docs/blob/master/docs/customizations/scripts/custom-protocols/intro.mdx",tags:[],version:"current",lastUpdatedAt:1696666871,formattedLastUpdatedAt:"Oct 7, 2023",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Custom Query Protocol"},sidebar:"tutorialSidebar",previous:{title:"Custom Protocols",permalink:"/category/custom-protocols"},next:{title:"Rust Custom Query",permalink:"/customizations/scripts/custom-protocols/rust-custom-query"}},p={},m=[{value:"Examples",id:"examples",level:2},{value:"Iron Python Script",id:"iron-python-script",level:3},{value:"C# Script",id:"c-script",level:3},{value:"Batch Script (Windows)",id:"batch-script-windows",level:3},{value:"Shell Script (Linux)",id:"shell-script-linux",level:3},{value:"XML Format",id:"xml-format",level:3}],u={toc:m},i="wrapper";function c(e){let{components:r,...t}=e;return(0,s.kt)(i,(0,a.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"custom-query-protocol"},"Custom Query Protocol"),(0,s.kt)("p",null,"You can set a custom script that queries the game server. This is useful if you want to add query support for games that don't have a supported query protocol."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Create a custom script. Set the script's event to ",(0,s.kt)("inlineCode",{parentName:"li"},"Custom query"),". You can have more than one custom query script with different operating systems."),(0,s.kt)("li",{parentName:"ul"},"Set the game's query protocol to custom script.")),(0,s.kt)("h2",{id:"examples"},"Examples"),(0,s.kt)("h3",{id:"iron-python-script"},"Iron Python Script"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},'import clr\nimport System\nfrom System import String\n \nXmlFormat="<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?><qstat><server type=\\"CUSTOM\\" address=\\"{0}:{1}\\" status=\\"{2}\\"><hostname>{0}:{1}</hostname><name>{3}</name><gametype>{4}</gametype><map>{5}</map><numplayers>{6}</numplayers><maxplayers>{7}</maxplayers><numspectators>0</numspectators><maxspectators>0</maxspectators><ping>0</ping><retries>0</retries><rules>{8}</rules><players>{9}</players></server></qstat>"\nStatus="UP"\nName="Cool Game Server"\nGameType="game mode"\nMap="map name"\nNumPlayers=2\nMaxPlayers=8\nRules="<rule name=\\"Rule 1\\">rule value</rule><rule name=\\"Rule 2\\">rule value</rule>"\nPlayers="<player><name>Player 1</name><ping>0</ping><score>100</score></player><player><name>Player 2</name><ping>0</ping><score>200</score></player>"\n  \nReturnValue=String.Format(XmlFormat, ThisService.IpAddress, ThisService.QueryPort, Status, Name, GameType, Map, NumPlayers, MaxPlayers, Rules, Players)\n')),(0,s.kt)("h3",{id:"c-script"},"C# Script"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-c#"},'//If your script uses other assemblies you can reference them here:\n//refAssemblies: System.dll, TCAdmin.SDK.dll,TCAdmin.GameHosting.SDK.dll\n \nusing System;\n \npublic class CSharpScript : CSharpScriptBase\n{\n   \n  public void Main() {\n    var XmlFormat="<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?><qstat><server type=\\"CUSTOM\\" address=\\"{0}:{1}\\" status=\\"{2}\\"><hostname>{0}:{1}</hostname><name>{3}</name><gametype>{4}</gametype><map>{5}</map><numplayers>{6}</numplayers><maxplayers>{7}</maxplayers><numspectators>0</numspectators><maxspectators>0</maxspectators><ping>0</ping><retries>0</retries><rules>{8}</rules><players>{9}</players></server></qstat>";\n    var Status="UP";\n    var Name="Cool Game Server";\n    var GameType="game mode";\n    var Map="map name";\n    var NumPlayers=2;\n    var MaxPlayers=8;\n    var Rules="<rule name=\\"Rule 1\\">rule value</rule><rule name=\\"Rule 2\\">rule value</rule>";\n    var Players="<player><name>Player 1</name><ping>0</ping><score>100</score></player><player><name>Player 2</name><ping>0</ping><score>200</score></player>";\n  \n    var ReturnValue=String.Format(XmlFormat, ThisService.IpAddress, ThisService.QueryPort, Status, Name, GameType, Map, NumPlayers, MaxPlayers, Rules, Players);\n    Script.AddVariable("ReturnValue", ReturnValue);\n  }\n}\n')),(0,s.kt)("h3",{id:"batch-script-windows"},"Batch Script (Windows)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'@echo off\nset Status=UP\nset Name=Cool Game Server\nset GameType=game mode\nset Map=map name\nset NumPlayers=2\nset MaxPlayers=8\nset Rules=^^^<rule name="Rule 1"^^^>rule value^^^</rule^^^>^^^<rule name="Rule 2"^^^>rule value^^^</rule^^^>\nset Players=^^^<player^^^>^^^<name^^^>Player 1^^^</name^^^>^^^<ping^^^>0^^^</ping^^^>^^^<score^^^>100^^^</score^^^>^^^</player^^^>^^^<player^^^>^^^<name^^^>Player 2^^^</name^^^>^^^<ping^^^>0^^^</ping^^^>^^^<score^^^>200^^^</score^^^>^^^</player^^^>\n\necho ^<?xml version="1.0" encoding="UTF-8"?^>^<qstat^>^<server type="CUSTOM" address="%ThisService_IpAddress%:%ThisService_QueryPort%" status="%Status%"^>^<hostname^>%ThisService_IpAddress%:%ThisService_QueryPort%^</hostname^>^<name^>%Name%^</name^>^<gametype^>%GameType%^</gametype^>^<map^>%Map%^</map^>^<numplayers^>%NumPlayers%^</numplayers^>^<maxplayers^>%MaxPlayers%^</maxplayers^>^<numspectators^>0^</numspectators^>^<maxspectators^>0^</maxspectators^>^<ping^>0^</ping^>^<retries^>0^</retries^>^<rules^>%Rules%^</rules^>^<players^>%Players%^</players^>^</server^>^</qstat^>\n')),(0,s.kt)("h3",{id:"shell-script-linux"},"Shell Script (Linux)"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'Status="UP"\nName="Cool Game Server"\nGameType="game mode"\nMap="map name"\nNumPlayers=2\nMaxPlayers=8\nRules=\'<rule name="Rule 1">rule value</rule><rule name="Rule 2">rule value</rule>\'\nPlayers=\'<player><name>Player 1</name><ping>0</ping><score>100</score></player><player><name>Player 2</name><ping>0</ping><score>200</score></player>\'\n\necho \\<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?\\>\\<qstat\\>\\<server type=\\"CUSTOM\\" address=\\"${ThisService_IpAddress}:${ThisService_QueryPort}\\" status=\\"${Status}\\"\\>\\<hostname\\>${ThisService_IpAddress}:${ThisService_QueryPort}\\</hostname\\>\\<name\\>${Name}\\</name\\>\\<gametype\\>${GameType}\\</gametype\\>\\<map\\>${Map}\\</map\\>\\<numplayers\\>${NumPlayers}\\</numplayers\\>\\<maxplayers\\>${MaxPlayers}\\</maxplayers\\>\\<numspectators\\>0\\</numspectators\\>\\<maxspectators\\>0\\</maxspectators\\>\\<ping\\>0\\</ping\\>\\<retries\\>0\\</retries\\>\\<rules\\>${Rules}\\</rules\\>\\<players\\>${Players}\\</players\\>\\</server\\>\\</qstat\\>\n')),(0,s.kt)("h3",{id:"xml-format"},"XML Format"),(0,s.kt)("p",null,"This an example of the XML format supported by TCAdmin."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0" encoding="UTF-8"?>\n<qstat>\n <server type="CUSTOM" address=":" status="UP">\n  <hostname>:</hostname>\n  <name>Cool Game Server</name>\n  <gametype>game mode</gametype>\n  <map>map name</map>\n  <numplayers>2</numplayers>\n  <maxplayers>8</maxplayers>\n  <numspectators>0</numspectators>\n  <maxspectators>0</maxspectators>\n  <ping>0</ping>\n  <retries>0</retries>\n  <rules>\n   <rule name="Rule 1">rule value</rule>\n   <rule name="Rule 2">rule value</rule>\n  </rules>\n  <players>\n   <player>\n    <name>Player 1</name>\n    <ping>0</ping>\n    <score>100</score>\n   </player>\n   <player>\n    <name>Player 2</name>\n    <ping>0</ping>\n    <score>200</score>\n   </player>\n  </players>\n </server>\n</qstat>\n')))}c.isMDXComponent=!0}}]);